
entity Funcionario {
	nome String
    codigo String
    status Status
}

enum Status {
    ATIVO, INATIVO
}

entity Pergunta {
	pergunta String
    tipo TipoPergunta
}

entity TipoPergunta{
	tipo String
}

entity Avaliacao {
	funcionario Funcioario
    perguntas Pergunta
}

entity Resposta {
	avaliacao Avaliacao
    data Instant
}

relationship ManyToOne {
	Pergunta{tipo} to TipoPergunta
}

relationship ManyToOne {
	Resposta{perguntas} to Avaliacao
}

relationship ManyToOne {
	Avaliacao{funcionario} to Funcionario
}

relationship OneToOne {
	Country{region} to Region
}

relationship OneToOne {
	Location{country} to Country
}

relationship OneToOne {
	Department{location} to Location
}

relationship ManyToMany {
	Avaliacao{pergunta} to Pergunta
}

// defining multiple OneToMany relationships with comments
relationship OneToMany {
	Employee to Job{employee}
	/**
	* A relationship
	*/
	Department to
	/**
	* Another side of the same relationship
	*/
	Employee{department}
}

relationship ManyToOne {
	Employee{manager} to Employee
}

// defining multiple oneToOne relationships
relationship OneToOne {
	JobHistory{job} to Job
	JobHistory{department} to Department
	JobHistory{employee} to Employee
}

// Set pagination options
paginate JobHistory, Employee with infinite-scroll
paginate Job with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employee, Job

// Set an angular suffix
// angularSuffix * with mySuffix
